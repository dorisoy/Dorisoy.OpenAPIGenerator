<codeGenerators:CodeGeneratorViewBase x:Class="NSwagStudio.Views.CodeGenerators.SwaggerToCSharpControllerGeneratorView"
                                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                      xmlns:converters="clr-namespace:MyToolkit.Converters;assembly=MyToolkit.Extended"
                                      xmlns:localConverters="clr-namespace:NSwagStudio.Converters"
                                      xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
                                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                                      xmlns:viewModels="clr-namespace:NSwagStudio.ViewModels.CodeGenerators"
                                      xmlns:controls="clr-namespace:NSwagStudio.Controls"
                                      xmlns:dialogs="clr-namespace:MyToolkit.Dialogs;assembly=MyToolkit.Extended"
                                      xmlns:codeGenerators="clr-namespace:NSwagStudio.Views.CodeGenerators"
                                      xmlns:views="clr-namespace:NSwagStudio.Views.CodeGenerators.Views"
                                      mc:Ignorable="d" 
                                      d:DesignHeight="800" d:DesignWidth="800">

    <UserControl.Resources>
        <viewModels:SwaggerToCSharpControllerGeneratorViewModel x:Key="ViewModel" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:NotConverter x:Key="NotConverter" />
        <localConverters:NumberAdditionConverter x:Key="NumberAdditionConverter" />
        <localConverters:StringArrayConverter x:Key="StringArrayConverter" />
    </UserControl.Resources>

    <TabControl TabStripPlacement="Left" Margin="8" Name="TabControl" DataContext="{StaticResource ViewModel}">
        <TabItem Header="设置" HeaderTemplate="{StaticResource RotatedTabItem}">
            <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Visible" 
                          HorizontalScrollBarVisibility="Hidden"
                          IsEnabled="{Binding IsLoading, Converter={StaticResource NotConverter}}">
                <StackPanel Margin="8,8,8,0" Width="{Binding ElementName=ScrollViewer, Path=ActualWidth, Converter={StaticResource NumberAdditionConverter}, ConverterParameter=-32}">
                    <TextBlock Text="CSharp控制器配置" FontSize="15" FontWeight="Bold" Margin="0,0,0,12" />

                    <TextBlock Text="命名空间" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding Command.Namespace, Mode=TwoWay}" Margin="0,0,0,12" />

                    <TextBlock Text="使用附加命名空间 (逗号分隔)" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding Command.AdditionalNamespaceUsages, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}" 
                             Margin="0,0,0,12" />

                    <GroupBox Header="Controller控制器" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <TextBlock Text="Controller样式" FontWeight="Bold" Margin="0,0,0,6" />
                            <ComboBox SelectedItem="{Binding Command.ControllerStyle, Mode=TwoWay}" 
                                      ToolTip="ControllerStyle"
                                      ItemsSource="{Binding ControllerStyles}" Margin="0,0,0,12" />

                            <TextBlock Text="Controller目标类型" FontWeight="Bold" Margin="0,0,0,6" />
                            <ComboBox SelectedItem="{Binding Command.ControllerTarget, Mode=TwoWay}" 
                                      ToolTip="ControllerTarget"
                                      ItemsSource="{Binding ControllerTargets}" Margin="0,0,0,12" />

                            <CheckBox IsChecked="{Binding Command.UseActionResultType, Mode=TwoWay}" 
                                      ToolTip="UseActionResultType"
                                      Content="使用 ASP.Net Core (2.1) ActionResult 返回类型" Margin="0,0,0,12" />

                            <CheckBox IsChecked="{Binding Command.UseCancellationToken, Mode=TwoWay}" 
                                      ToolTip="UseCancellationToken"
                                      Content="向控制器方法添加CancellationToken" Margin="0,0,0,12" />

                            <CheckBox IsChecked="{Binding Command.GenerateModelValidationAttributes, Mode=TwoWay}" 
                                      ToolTip="GenerateModelValidationAttributes"
                                      Content="添加模型验证属性" Margin="0,0,0,12" />

                            <CheckBox IsChecked="{Binding Command.WrapResponses, Mode=TwoWay}" 
                                      ToolTip="WrapResponses"
                                      Content="包装成功响应以允许完全响应访问" Margin="0,0,0,12" />

                            <CheckBox IsChecked="{Binding Command.GenerateOptionalParameters, Mode=TwoWay}" 
                                      ToolTip="GenerateOptionalParameters"
                                      Content="生成可选参数（重新排序参数（首先是必需的，最后是可选的）并生成可选参数" Margin="0,0,0,12" />

                            <TextBlock Text="排除的参数名称（逗号分隔" FontWeight="Bold" Margin="0,0,0,12" />
                            <TextBox ToolTip="ExcludedParameterNames" 
                                     Text="{Binding Command.ExcludedParameterNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}" 
                                     Margin="0,0,0,12" />

                            <TextBlock Text="路由命名策略" FontWeight="Bold" Margin="0,0,0,6" />
                            <ComboBox SelectedItem="{Binding Command.RouteNamingStrategy, Mode=TwoWay}" 
                                      ToolTip="RouteNamingStrategy"
                                      ItemsSource="{Binding RouteNamingStrategies}" Margin="0,0,0,12" />

                            <StackPanel Visibility="{Binding Command.WrapResponses, Converter={StaticResource VisibilityConverter}}">
                                <TextBlock Text="包装响应的方法（留空，“ControllerName.MethodName”，逗号分隔）" FontWeight="Bold" Margin="0,0,0,6" />
                                <TextBox ToolTip="WrapResponseMethods" 
                                         Text="{Binding Command.WrapResponseMethods, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}" 
                                         Margin="0,0,0,12" />

                                <CheckBox IsChecked="{Binding Command.GenerateResponseClasses, Mode=TwoWay}" 
                                  Content="Generate response classes (when disabled, response classes must be imported)" Margin="0,0,0,6" />

                                <StackPanel Visibility="{Binding Command.GenerateResponseClasses, Converter={StaticResource VisibilityConverter}}">
                                    <TextBlock Text="响应类名（可能包含“｛controller｝”占位符）" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ResponseClass, Mode=TwoWay}" Margin="0,0,0,12" />
                                </StackPanel>
                            </StackPanel>

                            <GroupBox Header="Web API 控制器" Margin="0,0,0,12">
                                <StackPanel Margin="4,8,4,-8">
                                    <TextBlock Text="覆盖BasePath(RoutePrefix)" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.BasePath, Mode=TwoWay}" Margin="0,0,0,12" />
                                    
                                    <TextBlock Text="Controller类名" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ClassName, Mode=TwoWay}" Margin="0,0,0,12" />

                                    <TextBlock Text="Controller 基类名(可选, 使用ASP.NET Core的 'Microsoft.AspNetCore.Mvc.Controller')" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ControllerBaseClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,12" />

                                    <TextBlock Margin="0,0,0,6" TextWrapping="Wrap">
                                    <Run Text="操作生成模式" FontWeight="Bold" />
                                    <LineBreak />
                                        类名的｛controller｝占位符被生成的客户端名称替换（取决于OperationGenerationMode策略）。
                                    </TextBlock>
                                    <ComboBox SelectedItem="{Binding Command.OperationGenerationMode, Mode=TwoWay}" 
                                              ItemsSource="{Binding OperationGenerationModes}" Margin="0,0,0,12" />
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="Parameter参数类型" Margin="0,0,0,12">
                                <StackPanel Margin="4,8,4,-8">
                                    <TextBlock Text="Generic Array 类型" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ParameterArrayType, Mode=TwoWay}" ToolTip="ParameterArrayType" Margin="0,0,0,12" />

                                    <TextBlock Text="Generic Dictionary 类型" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ParameterDictionaryType, Mode=TwoWay}" ToolTip="ParameterDictionaryType" Margin="0,0,0,12" />
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="Response响应类型" Margin="0,0,0,12">
                                <StackPanel Margin="4,8,4,-8">
                                    <TextBlock Text="Generic Array 类型" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ResponseArrayType, Mode=TwoWay}" ToolTip="ResponseArrayType" Margin="0,0,0,12" />

                                    <TextBlock Text="Generic Dictionary 类型" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ResponseDictionaryType, Mode=TwoWay}" ToolTip="ResponseDictionaryType" Margin="0,0,0,12" />
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>

                    <views:CSharpSettingsView />

                    <GroupBox Header="模板" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <TextBlock Text="Template directory" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.TemplateDirectory, Mode=TwoWay}"
                                     ToolTip="TemplateDirectory"
                                     Margin="0,0,0,12" />
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="输出" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <TextBlock Text="输出文件路径（留空：无文件输出）" FontWeight="Bold" Margin="0,0,0,6" />
                            <dialogs:FileSavePicker DefaultExtension=".cs" Filter="CSharp Files (.cs)|*.cs"
                                            FilePath="{Binding Command.OutputFilePath, Mode=TwoWay}" 
                                            Margin="0,0,0,12" />

                            <TextBlock Margin="0,0,0,6"
                                       Text="换行行为" TextWrapping="Wrap" FontWeight="Bold" />
                            <ComboBox SelectedItem="{Binding Command.NewLineBehavior, Mode=TwoWay}" ItemsSource="{Binding NewLineBehaviors}" Margin="0,0,0,12" />
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="输出" HeaderTemplate="{StaticResource RotatedTabItem}">
            <Border Margin="-2">
                <avalonedit:TextEditor Background="GhostWhite" FontFamily="Consolas" IsReadOnly="True" ShowLineNumbers="True"
                                   SyntaxHighlighting="C#" FontSize="10pt" Padding="8">
                    <i:Interaction.Behaviors>
                        <controls:AvalonEditBehavior Text="{Binding ClientCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:Interaction.Behaviors>
                </avalonedit:TextEditor>
            </Border>
        </TabItem>
    </TabControl>
</codeGenerators:CodeGeneratorViewBase>