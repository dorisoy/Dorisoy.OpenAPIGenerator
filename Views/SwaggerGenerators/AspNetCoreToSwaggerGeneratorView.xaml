<UserControl x:Class="NSwagStudio.Views.SwaggerGenerators.AspNetCoreToSwaggerGeneratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:swaggerGenerators="clr-namespace:NSwagStudio.ViewModels.SwaggerGenerators"
             xmlns:converters="clr-namespace:NSwagStudio.Converters"
             xmlns:dialogs="clr-namespace:MyToolkit.Dialogs;assembly=MyToolkit.Extended"
             xmlns:converters1="clr-namespace:MyToolkit.Converters;assembly=MyToolkit.Extended"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <swaggerGenerators:AspNetCoreToSwaggerGeneratorViewModel x:Key="ViewModel" />
        <converters:NumberAdditionConverter x:Key="NumberAdditionConverter" />
        <converters:StringArrayConverter x:Key="StringArrayConverter" />
        <converters1:NotConverter x:Key="NotConverter" />
        <converters1:VisibilityConverter x:Key="VisibilityConverter" />
    </UserControl.Resources>

    <ScrollViewer DataContext="{StaticResource ViewModel}" x:Name="ScrollViewer" 
                  VerticalScrollBarVisibility="Visible" 
                  HorizontalScrollBarVisibility="Hidden">
        <StackPanel Margin="8" Width="{Binding ElementName=ScrollViewer, Path=ActualWidth, Converter={StaticResource NumberAdditionConverter}, ConverterParameter=-32}">
            <TextBlock Text="AspNetCoreToSwaggerGenerator (new): 此生成器使用ASP.NET Core 的API 探针 " TextWrapping="Wrap" Margin="0,0,0,12" />

            <TextBlock Text="要么使用程序集 (来自编译的 .dll 文件) 或者使用项目 (加载一个.csproj 文件)." TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,12" />

            <TabControl Margin="0,0,0,12">
                <TabItem Header="使用项目生成(推荐)">
                    <StackPanel Margin="4,8,4,-8">
                        <TextBlock Text="项目文件路径" FontWeight="Bold" Margin="0,0,0,6" />
                        <dialogs:FileOpenPicker ToolTip="Project" Margin="0,0,0,12" 
                                                FilePath="{Binding Command.Project, Mode=TwoWay}"
                                                DefaultExtension=".csproj"
                                                Filter="C# Project (.csproj)|*.csproj"/>

                        <TextBlock Text="MSBuildProjectExtensionsPath扩展路径" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.MSBuildProjectExtensionsPath, Mode=TwoWay}" 
                                 ToolTip="MSBuildProjectExtensionsPath" Height="52" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="0,0,0,12" />

                        <TextBlock Text="配置" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.Configuration, Mode=TwoWay}" 
                                 ToolTip="Configuration" Margin="0,0,0,12" />

                        <TextBlock Text="运行时" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.Runtime, Mode=TwoWay}" 
                                 ToolTip="Runtime" Margin="0,0,0,12" />

                        <TextBlock Text="目标框架" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.TargetFramework, Mode=TwoWay}" 
                                 ToolTip="TargetFramework" Margin="0,0,0,12" />

                        <TextBlock Text="MSBuildOutputPath输出路径" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.MSBuildOutputPath, Mode=TwoWay}"
                                 ToolTip="MSBuildOutputPath" Margin="0,0,0,12" />

                        <CheckBox IsChecked="{Binding Command.NoBuild, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="NoBuild">
                            <TextBlock Text="不构建" TextWrapping="Wrap" />
                        </CheckBox>

                        <CheckBox IsChecked="{Binding Command.Verbose, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="Verbose">
                            <TextBlock Text="输出详细调试信息" TextWrapping="Wrap" />
                        </CheckBox>
                    </StackPanel>
                </TabItem>
                <TabItem Header="使用程序集生成">
                    <StackPanel Margin="4,8,4,-8">
                        <Grid Margin="0,0,0,12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>

                                <TextBlock Text=".NET 程序集路径 (多项另起单行)" FontWeight="Bold" Margin="0,0,0,6" />
                                <TextBox Grid.Row="1" Text="{Binding AssemblyPaths, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" 
                                         ToolTip="AssemblyPaths" Height="52" AcceptsReturn="True" VerticalScrollBarVisibility="Visible"  
                                         Margin="0,0,12,0" VerticalAlignment="Center" />
                            </Grid>

                            <Button Command="{Binding BrowseAssemblyCommand}" VerticalAlignment="Stretch"
                                    Padding="8,4,8,4" Grid.Column="1" Content="..." />
                        </Grid>

                        <TextBlock Text="App.config 或者 Web.config 文件路径 (可选，空时自动搜索)" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBlock Text="(对于正确的绑定重定向是必需的，当无法加载程序集时是必需的)" Margin="0,0,0,6" />
                        <dialogs:FileOpenPicker ToolTip="AssemblyConfig" Margin="0,0,0,12" 
                                                FilePath="{Binding Command.AssemblyConfig, Mode=TwoWay}"
                                                DefaultExtension=".config"
                                                Filter="Config Files (.config)|*.config"/>

                        <TextBlock Text="搜索引用的程序集文件的路径 (多项另起单行)" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.ReferencePaths, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" 
                                 ToolTip="ReferencePaths" Height="52" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="0,0,0,12" />

                        <CheckBox IsChecked="{Binding Command.UseNuGetCache, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="UseNuGetCache">
                            <TextBlock Text="将本地Nuget的缓存文件夹添加到引用路径" TextWrapping="Wrap" />
                        </CheckBox>

                        <TextBlock Text="CreateWebHostBuilder 方法来自 'assemblyName:fullTypeName.methodName' 或者 'fullTypeName.methodName' (自动发现时留空)" TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.CreateWebHostBuilderMethod, Mode=TwoWay}" 
                                 ToolTip="CreateWebHostBuilderMethod" Margin="0,0,0,12" />

                        <TextBlock Text="Startup 类型来自 'assemblyName:fullTypeName' 或者 'fullTypeName' (自动发现时留空)" 
                                   FontWeight="Bold" Margin="0,0,0,6" TextWrapping="Wrap" />
                        <TextBox Text="{Binding Command.StartupType, Mode=TwoWay}" 
                                 ToolTip="StartupType" Margin="0,0,0,12" />
                    </StackPanel>
                </TabItem>
            </TabControl>

            <TextBlock Text="工作目录 (可选, 即 appsettings.json 文件目录)" FontWeight="Bold" Margin="0,0,0,6" />
            <TextBox Text="{Binding Command.WorkingDirectory, Mode=TwoWay}"
                     ToolTip="WorkingDirectory"
                     Margin="0,0,0,12" />

            <TextBlock Text="ASPNETCORE_ENVIRONMENT 环境变量 (默认留空)" FontWeight="Bold" Margin="0,0,0,6" />
            <TextBox Text="{Binding Command.AspNetCoreEnvironment, Mode=TwoWay}"
                     ToolTip="WorkingDirectory"
                     Margin="0,0,0,12" />

            <CheckBox IsChecked="{Binding Command.UseDocumentProvider, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="UseDocumentProvider">
                <TextBlock Text="使用文档提供程序 (配置自 AddOpenApiDocument()/AddSwaggerDocument(), recommended)" TextWrapping="Wrap" />
            </CheckBox>

            <StackPanel Visibility="{Binding Command.UseDocumentProvider, Converter={StaticResource VisibilityConverter}}">
                <TextBlock Text="文档名称" FontWeight="Bold" Margin="0,0,0,6" />
                <TextBox Text="{Binding Command.DocumentName, Mode=TwoWay}"
                         ToolTip="DocumentName"
                         Margin="0,0,0,12" />
            </StackPanel>

            <StackPanel Visibility="{Binding Command.UseDocumentProvider, Converter={StaticResource NotConverter}}">
                <GroupBox Header="已弃用，通过DI自动解决（不更改）" Margin="0,0,0,8">
                    <StackPanel Margin="4,8,4,-8">
                        <TextBlock Margin="0,0,0,6" TextWrapping="Wrap">
                        <Run Text="Default Enum Handling" FontWeight="Bold" />
                        <LineBreak />
                             如果使用默认 Json.NET 序列化，请选择 'Integer'， 或者如果注册了全局StringEnumConverter，请选择 'String'
                        </TextBlock>
                        <ComboBox SelectedItem="{Binding Command.DefaultEnumHandling, Mode=TwoWay}" 
                                  ToolTip="DefaultEnumHandling" ItemsSource="{Binding EnumHandlings}" Margin="0,0,0,12" />

                        <TextBlock Margin="0,0,0,6"
                                   Text="默认属性名称处理" TextWrapping="Wrap" FontWeight="Bold" />
                        <ComboBox SelectedItem="{Binding Command.DefaultPropertyNameHandling, Mode=TwoWay}" 
                                  ToolTip="DefaultPropertyNameHandling" ItemsSource="{Binding PropertyNameHandlings}" Margin="0,0,0,12" />
                    </StackPanel>
                </GroupBox>

                <CheckBox IsChecked="{Binding Command.RequireParametersWithoutDefault, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="RequireParametersWithoutDefault">
                    <TextBlock Text="始终需要没有默认值的参数（一般情况下不启用）." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.AllowNullableBodyParameters, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="AllowNullableBodyParameters">
                    <TextBlock Text="允许可为null的正文参数（当MvcOptions.AllowEmptyInputInBodyModelBinding可用时忽略）" TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock Margin="0,0,0,6"
                           Text="默认引用类型为空处理" TextWrapping="Wrap" FontWeight="Bold" />
                <ComboBox SelectedItem="{Binding Command.DefaultReferenceTypeNullHandling, Mode=TwoWay}" 
                          ToolTip="DefaultReferenceTypeNullHandling" ItemsSource="{Binding ReferenceTypeNullHandlings}" Margin="0,0,0,12" />

                <TextBlock Margin="0,0,0,6"
                           Text="字典值类型的默认引用类型为null处理" TextWrapping="Wrap" FontWeight="Bold" />
                <ComboBox SelectedItem="{Binding Command.DefaultDictionaryValueReferenceTypeNullHandling, Mode=TwoWay}" 
                          ToolTip="DefaultDictionaryValueReferenceTypeNullHandling" ItemsSource="{Binding ReferenceTypeNullHandlings}" Margin="0,0,0,12" />

                <TextBlock Margin="0,0,0,6"
                           Text="默认响应引用类型空处理（如果缺少NotNullAttribute和CanBeNullAttribute）" TextWrapping="Wrap" FontWeight="Bold" />
                <ComboBox SelectedItem="{Binding Command.DefaultResponseReferenceTypeNullHandling, Mode=TwoWay}" 
                          ToolTip="DefaultResponseReferenceTypeNullHandling" ItemsSource="{Binding ReferenceTypeNullHandlings}" Margin="0,0,0,12" />

                <CheckBox IsChecked="{Binding Command.GenerateOriginalParameterNames, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="GenerateOriginalParameterNames">
                    <TextBlock Text="当参数名在.NET和HTTP中不同时，生成x-originalName属性" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateAbstractProperties, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="GenerateAbstractProperties">
                    <TextBlock Text="生成抽象属性（即接口和抽象属性，属性可以在继承层次结构中定义多次）" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateAbstractSchemas, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="GenerateAbstractSchemas">
                    <TextBlock Text="在架构上生成x-abstract标志" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.IgnoreObsoleteProperties, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="IgnoreObsoleteProperties">
                    <TextBlock Text="忽略具有ObsoleteAttribute的属性" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.AllowReferencesWithProperties, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="AllowReferencesWithProperties">
                    <TextBlock Text="即使在对象上定义了其他属性，也要使用$ref引用（否则使用带有$ref的allOf/oneOf）" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.FlattenInheritanceHierarchy, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="FlattenInheritanceHierarchy">
                    <TextBlock Text="扁平化继承层次结构，而不是使用allOf来描述继承" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateKnownTypes, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="GenerateKnownTypes">
                    <TextBlock Text="为KnownTypeAttribute属性中的类型生成架构" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateEnumMappingDescription, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="GenerateEnumMappingDescription">
                    <TextBlock Text="生成带有数字到枚举名称映射的描述（仅适用于整数枚举）" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateXmlObjects, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="GenerateXmlObjects">
                    <TextBlock Text="表示生成xmlObject定义" TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.UseHttpAttributeNameAsOperationId, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="UseHttpAttributeNameAsOperationId">
                    <TextBlock Text="将HttpMethodAttribute Name属性用作OperationId（如果可用）." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.UseXmlDocumentation, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="UseXmlDocumentation">
                    <TextBlock Text="读取XML文档文件." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.ResolveExternalXmlDocumentation, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="ResolveExternalXmlDocumentation">
                    <TextBlock Text="从NuGet缓存或.NET SDK目录解析XML文档." TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock Text="排除的类型名称（与JsonSchemaIgnoreAttribute相同，逗号分隔）." FontWeight="Bold" Margin="0,0,0,6" />
                <TextBox Text="{Binding Command.ExcludedTypeNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}" 
                         ToolTip="ExcludedTypeNames" Margin="0,0,0,12" />

                <TextBlock Text="要包含的NET Core API Explorer组名称（逗号分隔，empty = all，通常用于选择API版本）" 
                           TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,6" />
                <TextBox Text="{Binding Command.ApiGroupNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}" 
                         ToolTip="ApiGroupNames" Margin="0,0,0,12" />

                <GroupBox Header="Swagger信息" Margin="0,0,0,8">
                    <StackPanel Margin="4,8,4,-8">
                        <TextBlock Text="文档模板" FontWeight="Bold" Margin="0,0,0,6" />
                        <dialogs:FileOpenPicker ToolTip="DocumentTemplate" Margin="0,0,0,12" 
                                                FilePath="{Binding Command.DocumentTemplate, Mode=TwoWay}"
                                                Filter="OpenAPI Specification JSON (.json)|*.json|Swagger Specification YAML (.yaml)|*.yaml"
                                                DefaultExtension=".json"/>

                        <StackPanel Visibility="{Binding Command.DocumentTemplate, Converter={StaticResource NotConverter}}">
                            <TextBlock Text="标题" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.InfoTitle, Mode=TwoWay}"
                                     ToolTip="InfoTitle" Margin="0,0,0,12" />

                            <TextBlock Text="描述" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.InfoDescription, Mode=TwoWay}"
                                     ToolTip="InfoDescription" Margin="0,0,0,12" />

                            <TextBlock Text="版本" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.InfoVersion, Mode=TwoWay}"
                                     ToolTip="InfoVersion" Margin="0,0,0,12" />
                        </StackPanel>

                        <TextBlock Text="服务主机（可选，使用“.”删除主机名）" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.ServiceHost, Mode=TwoWay}"
                                 ToolTip="ServiceHost"
                                 Margin="0,0,0,12" />

                        <TextBlock Text="服务架构（可选，“http”、“https”、“ws”、“wss”，多个单独行" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.ServiceSchemes, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" 
                                 ToolTip="ServiceSchemes"
                                 Height="52" AcceptsReturn="True" 
                                 VerticalScrollBarVisibility="Visible" 
                                 Margin="0,0,0,12" />

                        <TextBlock Text="基服务路径（可选）" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.ServiceBasePath, Mode=TwoWay}"
                                 ToolTip="ServiceBasePath"
                                 Margin="0,0,0,12" />
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="类型扩展" Margin="0,0,0,8">
                    <StackPanel Margin="4,8,4,-8">
                        <TextBlock Text="使用“assemblyName:fullType”或“fullTypeName”形式的类型名称" 
                                   TextWrapping="Wrap" Margin="0,0,0,6" />

                        <TextBlock Text="自定义 IDocumentProcessor 实现（多个单独行)"  
                                   TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.DocumentProcessorTypes, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" 
                                 ToolTip="DocumentProcessors" Height="52" AcceptsReturn="True" 
                                 VerticalScrollBarVisibility="Visible" Margin="0,0,0,12" />

                        <TextBlock Text="自定义 IOperationProcessor 实现（多个单独行)"  
                                   TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.OperationProcessorTypes, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" 
                                 ToolTip="OperationProcessors" Height="52" AcceptsReturn="True" 
                                 VerticalScrollBarVisibility="Visible" Margin="0,0,0,12" />

                        <TextBlock Text="自定义 ITypeNameGenerator 实现" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.TypeNameGeneratorType, Mode=TwoWay}" 
                                 ToolTip="TypeNameGeneratorType" Margin="0,0,0,12" />

                        <TextBlock Text="自定义 ISchemaNameGenerator 实现" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.SchemaNameGeneratorType, Mode=TwoWay}" 
                                 ToolTip="SchemaNameGeneratorType" Margin="0,0,0,12" />

                        <TextBlock Text="自定义 IContractResolver 实现 (已弃用，通过DI自动解决)" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.ContractResolverType, Mode=TwoWay}" 
                                 ToolTip="ContractResolverType" Margin="0,0,0,12" />

                        <TextBlock Text="自定义 JsonSerializerSettings 实现 (已弃用, 通过DI自动解决)" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.SerializerSettingsType, Mode=TwoWay}" 
                                ToolTip="SerializerSettingsType" Margin="0,0,0,12" />
                    </StackPanel>
                </GroupBox>
            </StackPanel>

            <TextBlock Text="输出文件路径（空：无文件输出）" FontWeight="Bold" Margin="0,0,0,6" />
            <dialogs:FileSavePicker ToolTip="OutputFilePath" 
                                    Filter="OpenAPI/Swagger Specification JSON (.json)|*.json|OpenAPI/Swagger Specification YAML (.yaml)|*.yaml"
                                    DefaultExtension=".cs" 
                                    Margin="0,0,0,12"
                                    FilePath="{Binding Command.OutputFilePath, Mode=TwoWay}" />

            <StackPanel Visibility="{Binding Command.UseDocumentProvider, Converter={StaticResource NotConverter}}">
                <TextBlock Margin="0,0,0,6" Text="输出类型" TextWrapping="Wrap" FontWeight="Bold" />
                <ComboBox SelectedItem="{Binding Command.OutputType, Mode=TwoWay}" ItemsSource="{Binding OutputTypes}" Margin="0,0,0,12" />
            </StackPanel>

            <TextBlock Margin="0,0,0,6" Text="新行生成行为" TextWrapping="Wrap" FontWeight="Bold" />
            <ComboBox SelectedItem="{Binding Command.NewLineBehavior, Mode=TwoWay}" ItemsSource="{Binding NewLineBehaviors}" Margin="0,0,0,12" />
        </StackPanel>
    </ScrollViewer>
</UserControl>
