<UserControl x:Class="NSwagStudio.Views.SwaggerGenerators.AssemblyTypeToSwaggerGeneratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:swaggerGenerators="clr-namespace:NSwagStudio.ViewModels.SwaggerGenerators"
             xmlns:converters="clr-namespace:NSwagStudio.Converters"
             xmlns:dialogs="clr-namespace:MyToolkit.Dialogs;assembly=MyToolkit.Extended"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <swaggerGenerators:AssemblyTypeToSwaggerGeneratorViewModel x:Key="ViewModel" />
        <converters:NumberAdditionConverter x:Key="NumberAdditionConverter" />
        <converters:StringArrayConverter x:Key="StringArrayConverter" />
    </UserControl.Resources>

    <ScrollViewer DataContext="{StaticResource ViewModel}" x:Name="ScrollViewer" 
                  VerticalScrollBarVisibility="Visible" 
                  HorizontalScrollBarVisibility="Hidden">
        <StackPanel Margin="8" 
                    Width="{Binding ElementName=ScrollViewer, Path=ActualWidth, Converter={StaticResource NumberAdditionConverter}, ConverterParameter=-32}">
            <GroupBox Header="程序集" Margin="0,0,0,12">
                <StackPanel Margin="4,8,4,-8">
                    <Grid Margin="0,0,0,12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <TextBlock Text=".NET 程序集路径 (多项单独行)" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Grid.Row="1" Text="{Binding AssemblyPaths, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" 
                                     Height="52" AcceptsReturn="True" VerticalScrollBarVisibility="Visible"  
                                     Margin="0,0,12,0" VerticalAlignment="Center" />
                        </Grid>

                        <Button Command="{Binding BrowseAssemblyCommand}" VerticalAlignment="Stretch"
                                Padding="8,4,8,4" Grid.Column="1" Content="..." />
                    </Grid>
                    <TextBlock Text="{Binding AssemblyName, Mode=OneWay}" TextWrapping="Wrap" Margin="0,-6,0,12" />

                    <TextBlock Text="App.config 或者 Web.config 文件路径 (可选, 为空时自动搜索)" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBlock Text="(对于正确的绑定重定向是必需的，当无法加载程序集时是必需的)" Margin="0,0,0,6" />
                    <dialogs:FileOpenPicker Margin="0,0,0,12" 
                                            FilePath="{Binding Command.AssemblyConfig, Mode=TwoWay}"
                                            DefaultExtension=".config"
                                            Filter="Config Files (.config)|*.config"/>

                    <TextBlock Text="搜索引用的部分文件的路径（多项单独行）" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding Command.ReferencePaths, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" 
                             ToolTip="ReferencePaths" Height="52" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="0,0,0,12" />

                    <CheckBox IsChecked="{Binding Command.UseNuGetCache, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="UseNuGetCache">
                        <TextBlock Text="将本地Nuget的缓存文件夹添加到引用路径" TextWrapping="Wrap" />
                    </CheckBox>

                    <Button Command="{Binding LoadAssembliesCommand}" VerticalAlignment="Stretch"
                            Padding="8,4,8,4" Margin="0,0,0,12" Content="加载程序集" />
                </StackPanel>
            </GroupBox>

            <TextBlock Text="类" FontWeight="Bold" Margin="0,0,0,6" />
            <ListBox ItemsSource="{Binding AllClassNames}" x:Name="ControllersList" 
                     SelectionChanged="ControllersListSelectionChanged" BorderThickness="0" Padding="0" MaxHeight="300"
                     SelectionMode="Multiple">
                <ListBox.Resources>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" 
                                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" 
                                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding}" Margin="0,0,0,4"
                                  IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <TextBlock Margin="0,12,0,6" TextWrapping="Wrap">
                <Run Text="Default Enum Handling" FontWeight="Bold" />
                <LineBreak />
                如果使用默认Json.NET序列化程序，则选择“Integer”；如果注册了全局StringEnumConverter，则选择选择“String”.
            </TextBlock>
            <ComboBox SelectedItem="{Binding Command.DefaultEnumHandling, Mode=TwoWay}" ItemsSource="{Binding EnumHandlings}" Margin="0,0,0,12" />

            <TextBlock Margin="0,0,0,6"
                       Text="默认属性名称处理" TextWrapping="Wrap" FontWeight="Bold" />
            <ComboBox SelectedItem="{Binding Command.DefaultPropertyNameHandling, Mode=TwoWay}" ItemsSource="{Binding PropertyNameHandlings}" Margin="0,0,0,12" />

            <TextBlock Margin="0,0,0,6"
                       Text="默认引用类型为空处理" TextWrapping="Wrap" FontWeight="Bold" />
            <ComboBox SelectedItem="{Binding Command.DefaultReferenceTypeNullHandling, Mode=TwoWay}" 
                          ToolTip="DefaultReferenceTypeNullHandling" ItemsSource="{Binding ReferenceTypeNullHandlings}" Margin="0,0,0,12" />

            <TextBlock Margin="0,0,0,6"
                       Text="字典值类型的默认引用类型为null处理" TextWrapping="Wrap" FontWeight="Bold" />
            <ComboBox SelectedItem="{Binding Command.DefaultDictionaryValueReferenceTypeNullHandling, Mode=TwoWay}" 
                          ToolTip="DefaultDictionaryValueReferenceTypeNullHandling" ItemsSource="{Binding ReferenceTypeNullHandlings}" Margin="0,0,0,12" />

            <CheckBox IsChecked="{Binding Command.IgnoreObsoleteProperties, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="IgnoreObsoleteProperties">
                <TextBlock Text="忽略具有ObsoleteAttribute的属性" TextWrapping="Wrap" />
            </CheckBox>

            <CheckBox IsChecked="{Binding Command.AllowReferencesWithProperties, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="AllowReferencesWithProperties">
                <TextBlock Text="即使在对象上定义了其他属性，也要使用$ref引用（否则使用带有$ref的allOf/oneOf）" TextWrapping="Wrap" />
            </CheckBox>

            <CheckBox IsChecked="{Binding Command.FlattenInheritanceHierarchy, Mode=TwoWay}" Margin="0,0,0,12">
                <TextBlock Text="扁平化继承层次结构，而不是使用allOf来描述继承" TextWrapping="Wrap" />
            </CheckBox>

            <CheckBox IsChecked="{Binding Command.GenerateKnownTypes, Mode=TwoWay}" Margin="0,0,0,12">
                <TextBlock Text="为KnownTypeAttribute属性中的类型生成架构" TextWrapping="Wrap" />
            </CheckBox>

            <CheckBox IsChecked="{Binding Command.GenerateEnumMappingDescription, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="GenerateEnumMappingDescription">
                <TextBlock Text="生成带有数字到枚举名称映射的描述（仅适用于整数枚举）" TextWrapping="Wrap" />
            </CheckBox>

            <CheckBox IsChecked="{Binding Command.GenerateXmlObjects, Mode=TwoWay}" Margin="0,0,0,12">
                <TextBlock Text="表示生成xmlObject定义" TextWrapping="Wrap" />
            </CheckBox>

            <CheckBox IsChecked="{Binding Command.UseXmlDocumentation, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="UseXmlDocumentation">
                <TextBlock Text="读取XML文档文件." TextWrapping="Wrap" />
            </CheckBox>

            <CheckBox IsChecked="{Binding Command.ResolveExternalXmlDocumentation, Mode=TwoWay}" Margin="0,0,0,12" ToolTip="ResolveExternalXmlDocumentation">
                <TextBlock Text="从NuGet缓存或.NET SDK目录解析XML文档." TextWrapping="Wrap" />
            </CheckBox>

            <TextBlock Text="输出文件路径（空：无文件输出）" FontWeight="Bold" Margin="0,0,0,6" />
            <dialogs:FileSavePicker DefaultExtension=".cs" 
                                    Filter="OpenAPI/Swagger Specification JSON (.json)|*.json|Swagger Specification YAML (.yaml)|*.yaml"
                                    FilePath="{Binding Command.OutputFilePath, Mode=TwoWay}" 
                                    Margin="0,0,0,12" />

            <TextBlock Margin="0,0,0,6" Text="输出类型" TextWrapping="Wrap" FontWeight="Bold" />
            <ComboBox SelectedItem="{Binding Command.OutputType, Mode=TwoWay}" ItemsSource="{Binding OutputTypes}" Margin="0,0,0,12" />

            <TextBlock Margin="0,0,0,6"
                       Text="新行生成行为" TextWrapping="Wrap" FontWeight="Bold" />
            <ComboBox SelectedItem="{Binding Command.NewLineBehavior, Mode=TwoWay}" ItemsSource="{Binding NewLineBehaviors}" Margin="0,0,0,12" />

            <TextBlock TextWrapping="Wrap" Margin="0,8,0,0" FontWeight="Bold"
                       Text="生成具有给定类类型且没有操作的Swagger定义，使用此生成器为其他平台创建DTO代码." />
        </StackPanel>
    </ScrollViewer>
</UserControl>
